# Based on problem: 
# https://www.hackerrank.com/contests/january-real-data/challenges/a-story-of-people-and-places-reloaded
#
# Uses a list of common names and places, as well as building names and verbs as key works.
# After checking against the lists, uses various regular expressions to use the relative grammer
# to determine if the person is a person or place, and then storing the result to make sure that they
# are continued to be considered to be a person or place for the rest of the next.
#
# ~90% accuracy rate with a score of 79.25 (score is (#right - #wrong)/weight)
# 7th place in contest

# encoding: UTF-8
places = "xxxxxxxxxxxxxxxxxxxxx"
people = "xxxxxxxxxxxxxxxxxxxxx"
building = /(greenhouse|shed|stable|bank|hotel|shop|mall|supermarket|apartment|asylum|condominium|dormitory|duplex|house|college|university|school|high|new|library|museum|theater|capital|courthouse|embassy|parliament|office|statiton|prison|church|mosque|imambargah|monastery|mithraeum|pyramid|shrine|synagogue|temple|pagoda|gurdwara|airport|metro|lighthouse|hospital|house|city|town|center|of|the| and |island|:|-|mt|road|street|way|drive|alley|park|monument|memorial|ground|ruin|reef|canyon|cape|plain|castle|rock|tower|fort|forest|woods|mount|cave|pillar|point| bridge|desert|ocean|statue|trail|wonder|wall|colosseum|railroad)/
verbs ="lived|died|traveled|moved|adopted|played|dreamed|sought|bought|said|went|accelerated|accomplished|achieved|acquired|activated|adapted|adjusted|administered|advised|allocated|analyzed|annotated|anticipated|applied|appraised|arranged|articulated|assembled|assessed|assigned|attained|authored|balanced|briefed|budgeted|calculated|catalogued|categorized|chaired|changed|channeled|charted|clarified|coached|coded|collaborated|collected|communicated|compared|competed|compiled|completed|composed|computed|conceived|conducted|confronted|consolidated|constructed|contacted|continued|contracted|convened|coordinated|corresponded|counseled|created|critiqued|defined|delegated|Delivered|demonstrated|derived|Designed|detected|determined|developed|devised|diagnosed|Directed|discovered|dispensed|displayed|distributed|drafted|dramatized|earned|edited|Educated|effected|elicited|employed|encouraged|endured|enlisted|entertained|established|estimated|evaluated|examined|Exchanged|executed|exercised|exhibited|expanded|expeditedexperimented|explained|explored|facilitated|financed|focused|forecasted|formulated|fostered|Grouped|guided|identified|illustrated|implemented|imposed|improved|increased|influenced|informed|initiated|inquired|inspected|installed|instilled|Instituted|instructed|insured|interpreted|intervened|interviewed|introduced|invented|inventoried|investigated|judged|lectured|Listened|located|maintained|managed|marketed|mastered|measured|mediated|modeled|modified|molded|monitored|motivated|negotiated|observed|Obtained|operated|organized|outlined|oversaw|participated|Perceived|performed|persuaded|planned|predicted|prepared|Prescribed|presented|presided|Processed|produced|programmed|promoted|protected|provided|publicized|published|purchased|questioned|recommended|recorded|recruited|reduced|regulated|Reinforced|rendered|repaired|reported|represented|reproduced|researched|resolved|responded|Restored|retained|retrieved|reviewed|revised|rewrote|Routed|scheduled|searched|Selected|served|serviced|shaped|shared|simplified|solicited|solved|sought|specified|stimulated|studied|Succeeded|suggested|summarized|supervised|supported|surveyed|synthesized|systematized|targeted|taught|tested|trained|translated|tutored|updated|utilized|verified|visualized|wrote"
verbs = verbs.downcase()
people_gaz = [
  'Marilyn', 'Monroe',
  'Abraham', 'Lincoln',
  'Mother', 'Teresa',
  'John', 'Kennedy',
  'Martin', 'Luther', 'King',
  'Nelson', 'Mandela',
  'Winston', 'Churchill',
  'Bill', 'Gates',
  'Muhammad', 'Ali',
  'Mahatma', 'Gandhi',
  'Margaret', 'Thatcher',
  'Charles', 'Gaulle',
  'Christopher', 'Columbus',
  'George', 'Orwell',
  'Charles', 'Darwin',
  'Elvis', 'Presley',
  'Albert', 'Einstein',
  'Paul', 'McCartney',
  'Plato',
  'Queen', 'Elizabeth', 'II',
  'Queen', 'Victoria',
  'John', 'M', 'Keynes',
  'Mikhail', 'Gorbachev',
  'Jawaharlal', 'Nehru',
  'Leonardo', 'Vinci',
  'Louis', 'Pasteur',
  'Leo', 'Tolstoy',
  'Pablo', 'Picasso',
  'Vincent', 'Van', 'Gogh',
  'Franklin', 'Roosevelt',
  'Pope', 'John', 'Paul', 'II',
  'Thomas', 'Edison',
  'Rosa', 'Parks',
  'Aung', 'San', 'Suu', 'Kyi',
  'Lyndon', 'Johnson',
  'Ludwig', 'Beethoven',
  'Oprah', 'Winfrey',
  'Indira', 'Gandhi',
  'Eva', 'Peron',
  'Benazir', 'Bhutto',
  'Desmond', 'Tutu',
  'Dalai', 'Lama',
  'Walt', 'Disney',
  'Neil', 'Armstrong',
  'Peter', 'Sellers',
  'Barack', 'Obama',
  'Malcolm', 'X',
  'J.K.Rowling',
  'Richard', 'Branson',
  'Pele',
  'Jesse', 'Owens',
  'Ernest', 'Hemingway',
  'John', 'Lennon',
  'Henry', 'Ford',
  'Haile', 'Selassie',
  'Joseph', 'Stalin',
  'Lord', 'Baden', 'Powell',
  'Michael', 'Jordon',
  'George', 'Bush',
  'V.Lenin',
  'Osama', 'Bin', 'Laden',
  'Fidel', 'Castro',
  'Oscar', 'Wilde',
  'Coco', 'Chanel',
  'Pope', 'Francis',
  'Amelia', 'Earhart',
  'Adolf', 'Hitler',
  'Sting',
  'Mary', 'Magdalene',
  'Alfred', 'Hitchcock',
  'Michael', 'Jackson',
  'Madonna',
  'Mata', 'Hari',
  'Cleopatra',
  'Emmeline', 'Pankhurst',
  'Ronald', 'Reagan',
  'Lionel', 'Messi',
  'Babe', 'Ruth',
  'Bob', 'Geldof',
  'Leon', 'Trotsky',
  'Roger', 'Federer',
  'Sigmund', 'Freud',
  'Woodrow', 'Wilson',
  'Mao', 'Zedong',
  'Katherine', 'Hepburn',
  'Audrey', 'Hepburn',
  'David', 'Beckham',
  'Tiger', 'Woods',
  'Usain', 'Bolt',
  'Bill', 'Cosby',
  'Carl', 'Lewis',
  'Prince', 'Charles',
  'Jacqueline', 'Kennedy', 'Onassis',
  'C.S.', 'Lewis',
  'Billie', 'Holiday',
  'J.R.R.', 'Tolkien',
  'Tom', 'Cruise',
  'Billie', 'Jean', 'King',
  'Simon', 'Bolivar',
  'Anne', 'Frank',
  'Marie', 'Antoinette',
  'Yoko', 'Ono',
  'Emile', 'Zatopek',
  'Lech', 'Walesa',
  'Christiano', 'Ronaldo',
  'Julie', 'Andrews',
  'Florence', 'Nightingale',
  'Marie', 'Curie',
  'Stephen', 'Hawking',
  'Tim', 'Berners',
  'Beyonce',
  'Lady', 'Gaga',
  'Lance', 'Armstrong',
  'Shakira',
  'Jon', 'Stewart',
  'Scarlett', 'Johansson',
  'Larry', 'Page',
  'Sergey', 'Brin',
  'Wright', 'Brothers',
  'Roman', 'Abramovich',
  'Rupert', 'Murdoch',
  'Al', 'Gore',
  'Sacha', 'Baron',
  'George', 'Clooney',
  'Paul', 'Krugman',
  'Jimmy', 'Wales',
  'Brad', 'Pitt',
  'Kylie', 'Minogue',
  'Malala', 'Yousafzai',
  'Scarlett', 'Johansson',
]

places_gaz = [
  'Africa',
  'Europe',
  'Asia',
  'North America',
  'South America',
  'Antarctica',
  'Australia',
    'Afghanistan',
    'Albania',
    'Algeria',
    'Andorra',
    'Angola',
    'Antigua', 'Barbuda',
    'Argentina',
    'Armenia',
    'Aruba',
    'Australia',
    'Austria',
    'Azerbaijan',
    'Bahamasgc',
    'Bahrain',
    'Bangladesh',
    'Barbados',
    'Belarus',
    'Belgium',
    'Belize',
    'Benin',
    'Bhutan',
    'Bolivia',
    'Bosnia', 'Herzegovina',
    'Botswana',
    'Brazil',
    'Brunei',
    'Bulgaria',
    'Burkina', 'Faso',
    'Burma',
    'Burundi',
    'Cambodia',
    'Cameroon',
    'Canada',
    'Cape Verde',
    'Central African Republic',
    'Chad',
    'Chile',
    'China',
    'Colombia',
    'Comoros',
    'Congo', 'Democratic', 'Republic',
    'Congo', 'Republic',
    'Costa Rica',
    'Cote',
    'Croatia',
    'Cuba',
    'Curacao',
    'Cyprus',
    'Czech Republic',
    'Denmark',
    'Djibouti',
    'Dominica',
    'Dominican Republic',
    'East Timor',
    'Ecuador',
    'Egypt',
    'El Salvador',
    'Equatorial', 'Guinea',
    'Eritrea',
    'Estonia',
    'Ethiopia',
    'Fiji',
    'Finland',
    'France',
    'Gabon',
    'Gambiagc',
    'Georgia',
    'Germany',
    'Ghana',
    'Greece',
    'Grenada',
    'Guatemala',
    'Guinea',
    'Guinea', 'Bissau',
    'Guyana',
    'Haiti',
    'Holy See',
    'Honduras',
    'Hong Kong',
    'Hungary',
    'Iceland',
    'India',
    'Indonesia',
    'Iran',
    'Iraq',
    'Ireland',
    'Israel',
    'Italy',
    'Jamaica',
    'Japan',
    'Jordan',
    'Kazakhstan',
    'Kenya',
    'Kiribati',
    'Korea North',
    'Korea South',
    'Kosovo',
    'Kuwait',
    'Kyrgyzstan',
    'Laos',
    'Latvia',
    'Lebanon',
    'Lesotho',
    'Liberia',
    'Libya',
    'Liechtenstein',
    'Lithuania',
    'Luxembourg',
    'Macau',
    'Macedonia',
    'Madagascar',
    'Malawi',
    'Malaysia',
    'Maldives',
    'Mali',
    'Malta',
    'Marshall', 'Islands',
    'Mauritania',
    'Mauritius',
    'Mexico',
    'Micronesia',
    'Moldova',
    'Monaco',
    'Mongolia',
    'Montenegro',
    'Morocco',
    'Mozambique',
    'Namibia',
    'Nauru',
    'Nepal',
    'Netherlands',
    'Netherlands', 'Antilles',
    'New Zealand',
    'Nicaragua',
    'Niger',
    'Nigeria',
    'North', 'Korea',
    'Norway',
    'Oman',
    'Pakistan',
    'Palau',
    'Palestinian Territories',
    'Panama',
    'Papua', 'New', 'Guinea',
    'Paraguay',
    'Peru',
    'Philippines',
    'Poland',
    'Portugal',
    'Qatar',
    'Romania',
    'Russia',
    'Rwanda',
    'Saint', 'Kitts',
    'Nevis',
    'Saint', 'Lucia',
    'Saint', 'Vincent',
    'Grenadines',
    'Samoa',
    'San', 'Marino',
    'Sao', 'Tome', 'Principe',
    'Saudi', 'Arabia',
    'Senegal',
    'Serbia',
    'Seychelles',
    'Sierra', 'Leone',
    'Singapore',
    'Sint', 'Maarten',
    'Slovakia',
    'Slovenia',
    'Solomon', 'Islands',
    'Somalia',
    'South Africa',
    'South Korea',
    'South Sudan',
    'Spain',
    'Sri', 'Lanka',
    'Sudan',
    'Suriname',
    'Swaziland',
    'Sweden',
    'Switzerland',
    'Syria',
    'Taiwan',
    'Tajikistan',
    'Tanzania',
    'Thailand',
    'Timor', 'Leste',
    'Togo',
    'Tonga',
    'Trinidad',
    'Tobago',
    'Tunisia',
    'Turkey',
    'Turkmenistan',
    'Tuvalu',
    'Uganda',
    'Ukraine',
    'United Arab Emirates',
    'United Kingdom',
    'Uruguay',
    'Uzbekistan',
    'Vanuatu',
    'Venezuela',
    'Vietnam',
    'Yemen',
    'Zambia',
    'Zimbabwe', 
    'New York',   'New York',
'Los Angeles',   'California',
'Chicago',   'Illinois',
'Houston',  'Texas',
'Philadelphia',   'Pennsylvania',
'Phoenix',   'Arizona',
'San Antonio',   'Texas',
'San Diego',   'California',
'Dallas',  'Texas',
'San Jose',  'California',
'Austin',  'Texas',
'Indianapolis',  'Indiana',
'San Francisco',   'California',
'Columbus',  'Ohio',
'Fort Worth',  'Texas',
'Detroit',   'Michigan',
'Memphis',   'Tennessee',
'Boston',  'Massachusetts',
'Seattle',   'Washington',
'Denver',  'Colorado',
'Washington',  'District',
'Nashville',   'Tennessee',
'Baltimore',   'Maryland',
'Louisville',  'Kentucky',
'Portland',  'Oregon',
'Oklahoma City',   'Oklahoma',
'Milwaukee',   'Wisconsin',
'Las Vegas',   'Nevada',
'Albuquerque',   'New Mexico',
'Tucson',  'Arizona',
'Fresno',  'California',
'Sacramento',  'California',
'Long Beach',  'California',
'Kansas City',   'Missouri',
'Mesa',  'Arizona',
'Virginia Beach',  'Virginia',
'Atlanta',   'Georgia',
'Colorado Springs',  'Colorado',
'Raleigh North', 'Carolina',
'Omaha',   'Nebraska',
'Miami',   'Florida',
'Oakland',   'California',
'Tulsa',   'Oklahoma',
'Minneapolis',   'Minnesota',
'Cleveland',   'Ohio',
'Wichita',   'Kansas',
'Arlington',   'Texas',
'New Orleans',   'Louisiana',
'Bakersfield',   'California',
'Tampa',   'Florida',
'Honolulu',   'Hawai',
'Anaheim',   'California',
'Aurora',  'Colorado',
'Riverside',   'California',
'Corpus Christi',  'Texas',
'Pittsburgh',  'Pennsylvania',
'Lexington',   'Kentucky',
'Anchorage',   'Alaska',
'Stockton',  'California',
'Cincinnati',  'Ohio',
'Toledo',  'Ohio',
'Newark',  'New', 'Jersey',
'Greensboro',  'North Carolina',
'Plano',   'Texas',
'Henderson',   'Nevada',
'Buffalo',   'New', 'York',
'Fort Wayne',  'Indiana',
'Jersey City',   'New Jersey',
'Chula Vista',   'California',
'Orlando',   'Florida',
'Norfolk',   'Virginia',
'Chandler',  'Arizona',
'Laredo',  'Texas',
'Durham',  'North Carolina',
'Lubbock',   'Texas',
'Winston Salem',   'North Carolina',
'Garland',   'Texas',
'Glendale',  'Arizona',
'Hialeah',   'Florida',
'Reno',  'Nevada',
'Baton Rouge',   'Louisiana',
'Chesapeake',  'Virginia',
'Irving',  'Texas',
'North', 'Las Vegas',   'Nevada',
'San Bernardino',  'California',
'Boise',   'Idaho',
'Birmingham',  'Alabama',
'Rochester',   'New', 'York',
'Richmond',  'Virginia',
'Cambridge',   'Massachusetts',
'Spokane',   'Washington',
'Des Moines',  'Iowa',
'Montgomery',  'Alabama',
'Modesto',   'California',
'Fayetteville',  'North Carolina',
'Tacoma',  'Washington',
'Shreveport',  'Louisiana',
'Fontana',   'California',
'Oxnard',  'California',
'Aurora',  'Illinois',
'Moreno Valley',   'California',
'Akron',   'Ohio',
'Yonkers',   'New', 'York',
'Columbus',  'Georgia',
'Augusta',   'Georgia',
'Little', 'Rock',   'Arkansas',
'Amarillo',  'Texas',
'Mobile',  'Alabama',
'Huntington', 'Beach',  'California',
'Glendale',  'California',
'Grand', 'Rapids',  'Michigan',
'Salt', 'Lake', 'City',  'Utah',
'Tallahassee',   'Florida',
'Huntsville',  'Alabama',
'Worcester',   'Massachusetts',
'Knoxville',   'Tennessee',
'Grand', 'Prairie',   'Texas',
'Newport', 'News',  'Virginia',
'Brownsville',   'Texas',
'Santa', 'Clarita',   'California',
'Overland', 'Park',   'Kansas',
'Providence',  'Rhode', 'Island',
'Garden', 'Grove',  'California',
'Oceanside',   'California',
'Chattanooga',   'Tennessee',
'Fort', 'Lauderdale',   'Florida',
'Rancho', 'Cucamonga',  'California',
'Santa', 'Rosa',  'California',
'Port', 'St.', 'Lucie',  'Florida',
'Ontario',   'California',
'Tempe',   'Arizona',
'Vancouver',   'Washington',
'Springfield',   'Missouri',
'Cape', 'Coral',  'Florida',
'Pembroke', 'Pines',  'Florida',
'Sioux', 'Falls',   'South', 'Dakota',
'Peoria',  'Arizona',
'Lancaster',   'California',
'Elk', 'Grove',   'California',
'Corona',  'California',
'Salem',   'Oregon',
'Palmdale',  'California',
'Salinas',   'California',
'Springfield',   'Massachusetts',
'Pasadena',  'Texas',
'Rockford',  'Illinois',
'Pomona',  'California',
'Hayward',   'California',
'Fort', 'Collins',  'Colorado',
'Joliet',  'Illinois',
'Escondido',   'California',
'Kansas', 'City',   'Kansas',
'Torrance',  'California',
'Bridgeport',  'Connecticut',
'Sunnyvale',   'California',
'Lakewood',  'Colorado',
'Hollywood',   'Florida',
'Syracuse',  'New', 'York',
'Naperville',  'Illinois',
'McKinney',  'Texas',
'Mesquite',  'Texas',
'Orange',  'California',
'Fullerton',   'California',
'Pasadena',  'California',
'West', 'Valley', 'City',  'Utah',
'Columbia',  'South', 'Carolina',
'New', 'Haven',   'Connecticut',
'Sterling', 'Heights',  'Michigan',
'Olathe',  'Kansas',
'Miramar',   'Florida',
'Thousand', 'Oaks',   'California',
'Frisco',  'Texas',
'Cedar', 'Rapids',  'Iowa',
'Topeka',  'Kansas',
'Visalia',   'California',
'Waco',  'Texas',
'Bellevue',  'Washington',
'Gainesville',   'Florida',
'Simi', 'Valley',   'California',
'Coral', 'Springs',   'Florida',
'Hartford',  'Connecticut',
'Concord',   'California',
'Roseville',   'California',
'Thornton',  'Colorado',
'Lafayette',   'Louisiana',
'Surprise',  'Arizona',
'Denton',  'Texas',
'Victorville',   'California',
'Evansville',  'Indiana',
'Midland',   'Texas',
'Santa', 'Clara',   'California',
'Athens',  'Georgia',
'Allentown',   'Pennsylvania',
'Abilene',   'Texas',
'Beaumont',  'Texas',
'Vallejo',   'California',
'Independence',  'Missouri',
'Springfield',   'Illinois',
'Ann', 'Arbor',   'Michigan',
'Provo',   'Utah',
'Peoria',  'Illinois',
'Norman',  'Oklahoma',
'Berkeley',  'California',
'El', 'Monte',  'California',
'Murfreesboro',  'Tennessee',
'Downey',  'California',
'Costa', 'Mesa',  'California',
'Inglewood',   'California',
'Miami', 'Gardens',   'Florida',
'Wilmington',  'North', 'Carolina',
'Waterbury',   'Connecticut',
'Arvada',  'Colorado',
'Carlsbad',  'California',
'Westminster',   'Colorado',
'Rochester',   'Minnesota',
'Gresham',   'Oregon',
'Clearwater',  'Florida',
'Lowell',  'Massachusetts',
'West', 'Jordan',   'Utah','Buenaventura',
'Fairfield',   'California',
'West', 'Covina',   'California',
'Billings',  'Montana',
'Murrieta',  'California',
'High Point',  'North', 'Carolina',
'Round Rock',  'Texas',
'Richmond',  'California',
'Norwalk',   'California',
'Odessa',  'Texas',
'Antioch',   'California',
'Temecula',  'California',
'Green Bay',   'Wisconsin',
'Everett',   'Washington',
'Wichita', 'Falls',   'Texas',
'Burbank',   'California',
'Palm Bay',  'Florida',
'Centennial',  'Colorado',
'Daly City',   'California',
'Richardson',  'Texas',
'Pompano Beach',   'Florida',
'Broken Arrow',  'Oklahoma',
'North Charleston',  'South Carolina',
'West Palm Beach',   'Florida',
'Boulder',   'Colorado',
'Rialto',  'California',
'Santa Maria',   'California',
'El Cajon',  'California',
'Davenport',   'Iowa',
'Las', 'Cruces',  'New', 'Mexico',
'South', 'Bend',  'Indiana',
'Flint',   'Michigan',
'Kenosha',   'Wisconsin',
    'Stonehenge',
    'Catacombs of Kom el Shoqafa',
    'Porcelain Tower of Nanjing',
    'Hagia Sophia',
    'Leaning Tower of Pisa',
    'Taj Mahal',
    'Cairo Citadel',
    'Ely Cathedral',
    'Cluny Abbey',
    'Channel Tunnel',
    'CN Tower',
    'Empire State Building',
    'Golden Gate Bridge',
    'Itaipu Dam',
    'Panama Canal',
    'Potala Palace',
    'Jerusalem',
    'Old City of Jerusalem',
    'Polar Ice Caps',
    'Internet',
    'Mayan Ruins',
    'Grand Canyon'
]

people_gaz.each{|s|
    if people == "xxxxxxxxxxxxxxxxxxxxx"
            people = s
        else
            people = people + "|" + s
        end
    }
places_gaz.each{|s|
    if places == "xxxxxxxxxxxxxxxxxxxxx"
            places = s
        else
            places = places + "|" + s
        end
    }
text = gets
text.force_encoding 'UTF-8'
while text =~ /\[[0-9]*\]/
    text[/\[[0-9]*\]/] = ""
end
times = gets.to_i
1.upto(times){|i|
    name = gets
    name.force_encoding 'UTF-8'
    name.strip!()
    name.force_encoding 'UTF-8'
    if people_gaz.include?(name)
        puts "person"
        if people == "xxxxxxxxxxxxxxxxxxxxx"
            people = name
        else
            people = people + "|" + name
        end
    elsif places_gaz.include?(name) || name.downcase =~ building
        puts "place"
        if places == "xxxxxxxxxxxxxxxxxxxxx"
            places = name
        else
            places = places + "|" + name
        end
     elsif text =~ /#{name}'s|(#{people}|[A-Z][a-z]*)\s#{name}|((#{verbs})|Mr\.|Sir\.|Mrs\.|Ms\.)((\s[A-Za-z,.]*){1,3})\s#{name}|#{name}((\s[A-Za-z,.]*){1,3})\s(#{verbs})/
        puts "person"
        if people == "xxxxxxxxxxxxxxxxxxxxx"
            people = name
        else
            people = people + "|" + name
        end
    elsif text =~ /(#{places})(\sand(\s[A-Za-z,.]*){0,3})\s#{name}/
        puts "place"
        if places == "xxxxxxxxxxxxxxxxxxxxx"
            places = name
        else
            places = places + "|" + name
        end
    elsif text =~ /(\s((#{places})|(t|T)o|(f|F)rom|(i|I)n|(i|I)nto|(a|A)|(a|A)t|(f|F)or|(n|N)orth|(e|E)ast|(w|W)est|(s|S)outh|(t|T)he))( ([A-Za-z]*){1})?\s#{name}|,\s#{name},/
        puts "place"
        if places == "xxxxxxxxxxxxxxxxxxxxx"
            places = name
        else
            places = places + "|" + name
        end
    else
        puts "person"
        if people == "xxxxxxxxxxxxxxxxxxxxx"
            people = name
        else
            people = people + "|" + name
        end
    end
    }
